#!/bin/bash
# Set the backlight brightness on all displays to follow what is set by a
# laptop's builtin keys and brightness tools such as Gnome's slider.
# It does this by reading /sys/class/backlight/*/brightness.
# 
# If setting backlight fails, falls back to adjusting brightness in software.
#
# This tool is especially useful on a laptop plugged into an external monitor.

# Written by hackerb9, 2019
# Inspired by a post by Sarmad Khalid Abdullah <sarmad@alusus.org>.
# https://github.com/pop-os/pop/issues/73#issuecomment-381296708

usegamma=yes			# "yes" to attempt to maintain contrast.
blacklist="none"		# Optional xrandr outputs to NOT change. (Regex)
# Examples:
#		blacklist=eDP-1
#		blacklist="eDP-1|eDP-2|eDP-3|eDP-4"
# 	     	blacklist="eDP-"	(equivalent to "eDP-1|eDP-2|...etc")
# 	     	blacklist="^DP"		(matches DP-1, but not eDP-1)

reset() {
    # When the script exits, set all displays to 100% brightness.
    blevel() { echo 100 ; }
    bfloat() { echo 1.0 ; }
    bgamma() { echo --gamma 1:1:1 ; }
    bset
}
trap reset exit

verbose() { [[ "$vflag" ]] && echo "$@" >&2 ; }
if [[ "$1" == "-v" ]]; then vflag="yup"; shift; fi
if [[ "$1" == "-x" ]]; then set -x; shift; fi


if ! type inotifywait >/dev/null; then
    echo "This program requires inotifywait. Please install inotify-tools.">&2
    exit 1
fi

backlightdir=$(ls -1d /sys/class/backlight/*)
if [[ -z "$backlightdir" ]]; then
    echo "Error. No existing backlight on this computer to follow." >&2
    exit 1
fi
if [[ $(echo "$backlightdir" | wc -l) -gt 1 ]]; then
    echo "Oops. More than one backlight detected." >&2
    echo "$backlightdir" |cat -n >&2
    backlightdir=$(echo "$backlightdir" | head -1)
    echo "Hoping “$(basename "$backlightdir")” is the right one." >&2
fi

declare -i max=$(<"$backlightdir/max_brightness")
level="$backlightdir/brightness"
factor=$(echo | awk "{print $max/100}")

blevel() {
    local -i l=$(<$level)
    l=l*100/max
    echo $l
}
bfloat() {
    echo | awk "{print $(<$level) / $max}"
}
bgamma() {
    # As brightness is lowered in software, the screen can lose contrast.
    # A fix is to darken midtones before the brightest pixels.
    if [[ $usegamma != yes ]]; then return; fi
    g=$(echo | awk "{print ( $(<$level) / $max / 2)+0.5}")
    echo "--gamma $g:$g:$g"
}

bset() {
    for output in $(xrandr --current | awk '$2 == "connected" {print $1}'); do
	if [[ $output =~ $blacklist ]]; then continue; fi
 	if ! xrandr --output $output --set Backlight $(blevel) 2>/dev/null; then
	    xrandr --output $output --brightness $(bfloat) $(bgamma) &&
		verbose "Successfully set brightness to $(bfloat) (gamma $(bgamma)) for $output"
	else	    
	    verbose "Successfully set backlight to $(blevel) for $output"
	fi
    done
}

bset
inotifywait -mqe modify $level | while read; do
    verbose "Now processing: '$REPLY'"
    bset
done


# "Once I was bathed in the Light of Truth within..."
# 		—Sarmad Kashani, 1661 CE
